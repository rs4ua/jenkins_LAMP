---
- name: Configuring Prod Server
  hosts: all
  become: yes
  vars:
    HOST_KEY_CHECKING: "false"
    COMMAND_WARNINGS: "false"
    DEPRECATION_WARNINGS: "false"
    
  tasks:
    - block: # configure dns and time
        - name: Remove resolv.conf file
          file:
            path: /etc/resolv.conf
            state: absent

        - name: Create dns connect
          ansible.builtin.template:
            src: "./files/resolv.conf.j2"
            dest: "/etc/resolv.conf"
            owner: "root"
            group: "root"
            mode: "0644"

        - name: Set time zone
          community.general.timezone:
            name: America/Chicago


    - block: # configure and install docker
        - name: Add Docker GPG apt Key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker Repository
          apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu focal stable
            state: present
            filename: 'docker'

        - name: Update apt cache
          apt:
            update_cache: yes

        - name: Install docker components
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
              - docker-compose
            state: present

        - name: Install NodeExporter
          apt:
            name:
              - prometheus-node-exporter
            state: present

        - name: Adding docker user
          user:
            name: '{{ ansible_user }}'
            append: yes
            groups: docker

        - name: Reboot servers
          shell: sleep 5 && reboot now
          async: 1
          poll: 0

        - name: Wait till my server will come up online
          wait_for:
            host: '{{ inventory_hostname }}'
            state: started
            delay: 5
            timeout: 40
          delegate_to: 127.0.0.1

  handlers:
    - name: restart docker demon
      ansible.builtin.service:
        name: docker
        state: restarted
      when: "'docker0' is in ansible_interfaces"
...
